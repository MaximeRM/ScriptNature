library(SCGLR)
library(SCGLR)
source("Functions/TAG.R")
library(SCGLR)
source("Functions/TAG.R")
source("Functions/GGfuns.R")
abondsub <- readRDS("Data/CoForData.rds")
names(abondsub)
nY <- names(abondsub)[2:194]
nY
nX <- DataList$nX[203:226]
abondsub <- readRDS("Data/CoForData.rds")
nY <- names(abondsub)[2:194]
nX <- names(abondsub)[203:226]
nX
length(nX)
library(SCGLR)
source("Functions/TAG.R")
source("Functions/GGfuns.R")
library(SCGLR)
source("Functions/TAG.R")
source("Functions/GGfuns.R")
# Abundance data (available upon request see XXXXXXXXXXXX)
abondsub <- readRDS("Data/CoForData.rds")
# Species names
nY <- names(abondsub)[2:194]
# Climate predictors
nX <- names(abondsub)[203:226]
# Additional variables
nT <- c("HWSD","Anthr2", "I(log(Anthr2))")
# Type of family distribution
family <- rep("poisson", length(nY))
# Formula
form <- multivariateFormula(nY, c(nX),A = nT)
# Abundance data (available upon request see XXXXXXXXXXXX)
abond <- readRDS("Data/CoForData.rds")
# Species names
nY <- names(abond)[2:194]
# Climate predictors
nX <- names(abond)[203:226]
# Additional variables
nT <- c("HWSD","Anthr2", "I(log(Anthr2))")
# Formula
form <- multivariateFormula(nY, c(nX), A = nT)
# Type of family distribution
family <- rep("poisson", length(nY))
#crossvalidation
cv <- scglrCrossVal(form,data=abond,K=6,offset=abond$offset,nfolds=10,
family=family,crit=list(tol=1e-6,maxit=1000),
method=methodSR(l=1,s=0.1,bailout = 1000))
mean.crit <- colMeans(log(cv))
kOpt <- which.min(mean.crit)-1 # kOpt=3 in the present study
kOpt
plot(mean.crit)
################
# Run scglr on the whole dataset
genus.scglr <-scglr(form, data = abond,K = kOpt, offset = abond$offset,
family = family, crit = list(tol = 1e-6, maxit = 1000),
method = methodSR(l = 1,s = 0.1,bailout = 1000,maxiter = 100))
plot(genus.scglr,threshold=0.1,labels.size=0.6,labels.auto=FALSE,plane=c(1,2))
# Create spatial clusters
ngroup <- 40 # Number of spatial clusters, i.e. number of cal/val datasets
tmp_clust <- abond[,c("lon", "lat", "id_cell")]
mdist <- dist(tmp_clust[c("lon","lat")])
hc <- hclust(mdist, method="ward.D")
tmp_clust$Clust_100km = cutree(hc, k=ngroup)
plot(tmp_clust$lon, tmp_clust$lat, col=sample(rainbow(ngroup))[as.factor(tmp_clust$Clust_100km)],
pch=20,xlab="lon",ylab="lat",asp=1,cex=0.5)
plot(genus.scglr,threshold=0.1,labels.size=0.6,labels.auto=FALSE,plane=c(1,2))
# Predictions on the validation dataset
repet = ngroup
gpeval = tmp_clust$Clust_100km
#
plots =1:nrow(abond)
mat_pred_val = as.matrix(abond[, nY])
for (i in 1:repet) {
print(paste(i, "/", repet))
plots_val <- plots[gpeval == i]
plots_cal <- plots[gpeval != i]
genus.scglr2 <- scglr(form,data=abond,K=kOpt,offset=abond$offset,subset=plots_cal,
family=family,crit=list(tol=1e-6,maxit=1000),
method=methodSR(l=4,s=0.25,bailout = 1000,maxiter = 100,epsilon = 1e-9))
## Validation matrix
x_new <-  model.matrix(form, data = abond[plots_val,], rhs = 1:length(form)[2])
## Predicting abundances on validation dataset
mat_pred_val[plots_val,] <- multivariatePredictGlm(x_new,family=rep("poisson",length(nY)),
beta=as.matrix(genus.scglr2$beta),
offset=abond$offset[plots_val])
}
generaldir="~/Rejou/Post-doc_Cofortip/AnalyseCOFORTIP/SCGLR/NewMs/"
DataInput=paste0(generaldir,"OutDataRevision/")
load(paste0(DataInput,"grilleOut"))
str(grilleOut)
gridTot=grilleOut$grilleTotsub
getwd()
saveRDS(gridTot,file="Data/GridTot.rds")
# Load study area with predictors
GridTot <- readRDS("Data/GridTot.rds")
str(GridTot)
GridTot$NF=NULL
GridTot$hull=NULL
GridTot$hull05=NULL
GridTot$CCI=NULL
names(GridTot)
GridTot$HWSDori=NULL
saveRDS(GridTot,"Data/GridTot.rds")
# Load study area with predictors
GridTot <- readRDS("Data/GridTot.rds")
str(GridTot)
# Predictions over the full study area
xTot <- model.matrix(form, data = GridTot, rhs = 1:length(form)[2])#[, -1]
# Predictions over the full study area
xTot <- model.matrix(form, data = GridTot, rhs = 1:length(form)[2])
prediction <- data.table(multivariatePredictGlm( xTot,family = rep("poisson", length(nY)),beta = genus.scglr$beta))
# Required packages
libs <- c("ade4","SCGLR","ggplot2","data.table")
lapply(libs, require, character.only = TRUE)
# Load study area with predictors
GridTot <- readRDS("Data/GridTot.rds")
# Predictions over the full study area
xTot <- model.matrix(form, data = GridTot, rhs = 1:length(form)[2])
prediction <- data.table(multivariatePredictGlm( xTot,family = rep("poisson", length(nY)),beta = genus.scglr$beta))
# Predictions over the full study area
xTot <- model.matrix(form, data = GridTot, rhs = 1:length(form)[2])
# Predictions over the full study area
xTot <- model.matrix(form, data = GridTot, rhs = 1:length(form)[2])
prediction <- data.table(multivariatePredictGlm( xTot,family = rep("poisson", length(nY)),beta = as.matrix(genus.scglr$beta))
prediction <- data.table(multivariatePredictGlm( xTot,family = rep("poisson", length(nY)),beta = as.matrix(genus.scglr$beta)))
prediction<- data.table(prediction, lon = grilleTotsub$lon,lat = grilleTotsub$lat)
prediction<- data.table(prediction, lon = GridTot$lon,lat = GridTot$lat)
filt=GridTot$lon>21 & GridTot$lat>4.249
GridTot=GridTot[!filt,]
saveRDS(GridTot,"Data/GridTot.rds")
# Load study area with predictors
GridTot <- readRDS("Data/GridTot.rds")
# Predictions over the full study area
xTot <- model.matrix(form, data = GridTot, rhs = 1:length(form)[2])
prediction <- data.table(multivariatePredictGlm( xTot,family = rep("poisson", length(nY)),beta = as.matrix(genus.scglr$beta)))
prediction<- data.table(prediction, lon = GridTot$lon,lat = GridTot$lat)
# Floristic analysis
datFlo <- as.data.frame(prediction[,nY,with=F])
# Floristic analysis
datFlo <- as.data.frame(prediction[,nY,with=F])
dudiPred <- dudi.coa(datFlo, scannf=F, nf=5)
source('~/Rejou/Post-doc_Cofortip/AnalyseCOFORTIP/SCGLR/NewMs/ScriptNature/Functions/GGfuns.R')
# Map first three predicted CA axes (Fig 1 of the paper)
dataCA=data.table(prediction[,.(lon,lat)],dudiPred$li[,1:3])
rastRGBflo=rasterFromXYZ(dataFlo)
plot(rastRGBflo)
# Required packages
libs <- c("ade4","SCGLR","ggplot2","data.table","raster")
lapply(libs, require, character.only = TRUE)
# Map first three predicted CA axes (Fig 1 of the paper)
dataCA=data.table(prediction[,.(lon,lat)],dudiPred$li[,1:3])
rastRGBflo=rasterFromXYZ(dataFlo)
plot(rastRGBflo)
# Map first three predicted CA axes (Fig 1 of the paper)
dataCA=data.table(prediction[,.(lon,lat)],dudiPred$li[,1:3])
rastRGBflo=rasterFromXYZ(dataCA)
rastRGBflo=rasterFromXYZ(as.data.frame(dataCA))
str(dataCA)
rastRGBflo=rasterFromXYZ(dataCA)
plot(rastRGBflo)
# Build floristic groups
Naxes <- 5
TreeClust <- hclust(dist(dudiPred$li[,1:Naxes]),method = "ward.D")
SubTree=clip.clust(TreeClust,k = ngroup,data=grilleOut$prediction)
# Required packages
libs <- c("ade4","SCGLR","ggplot2","data.table","raster","maptree")
lapply(libs, require, character.only = TRUE)
SubTree <- hcclip.clust(TreeClust,k = ngroup,data=grilleOut$prediction)
SubTree <- clip.clust(TreeClust,k = ngroup,data=grilleOut$prediction)
# Build floristic groups
Naxes <- 5
TreeClust <- hclust(dist(dudiPred$li[,1:Naxes]),method = "ward.D")
SubTree <- clip.clust(TreeClust,k = ngroup,data=prediction)
gpe=c()
for(i in 1:length(SubTree$membership)) gpe=c(gpe,rep(names(SubTree$membership)[i],length((SubTree$membership[[i]]))))
dat <- data.frame(row=as.numeric(unlist(SubTree$membership)),gpe=gpe)
classPredict <- data.frame(grilleOut$prediction[,c("lon","lat")],
clFac=dat[order(dat$row),"gpe"])
classPredict <- data.frame(prediction[,c("lon","lat")],
clFac=dat[order(dat$row),"gpe"])
outPutmany <- data.table(grilleOut$prediction,tpHigh=as.factor(classPredict$clFac))
outPutmany <- data.table(prediction,tpHigh=as.factor(classPredict$clFac))
rasttest <- rasterFromXYZ(classPredict)
plot(rasttest)
